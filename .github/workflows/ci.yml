name: CI

on:
  push:
    branches: [master, staging, trying]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always

jobs:
  deny:
    name: deny
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources

    # Prevent sudden announcement of a new advisory from failing ci:
    continue-on-error: ${{ matrix.checks == 'advisories' }}

    steps:
    - uses: actions/checkout@v3
    - uses: EmbarkStudios/cargo-deny-action@v1
      with:
        command: check ${{ matrix.checks }}


  fmt:
    name: format
    runs-on: ubuntu-latest
    needs: deny

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check


  check:
    needs: deny
    name: check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.60.0
          - stable
          - beta
          # - nightly

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: swatinem/rust-cache@v1
      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check


  doc:
    name: doc
    runs-on: ubuntu-latest
    needs: check

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --all-features --workspace --no-deps --document-private-items


  test:
    needs: check
    name: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.60.0
          - stable
          - beta
          # - nightly
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: swatinem/rust-cache@v1
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --all-features


  clippy:
    needs: check
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.60.0
          override: true
      - uses: swatinem/rust-cache@v1
      - run: rustup component add clippy
      - name: cargo clippy
        run: cargo clippy --all --all-targets --all-features -- -D warnings


  #coverage:
  #  needs: check
  #  name: coverage
  #  runs-on: ubuntu-latest
  #  container:
  #    image: xd009642/tarpaulin:develop-nightly
  #    options: --security-opt seccomp=unconfined
  #  steps:
  #    - name: Checkout repository
  #      uses: actions/checkout@v3
  #    - name: Generate code coverage
  #      run: |
  #        cargo +nightly tarpaulin --verbose --all-features --workspace --timeout 120 --out Xml
  #    - name: Upload to codecov.io
  #      uses: codecov/codecov-action@v2
  #      with:
  #        # token: ${{secrets.CODECOV_TOKEN}} # not required for public repos
  #        fail_ci_if_error: true


  outdated:
    needs: check
    name: outdated
    runs-on: ubuntu-latest

    # We allow outdated packages because there's dependabot here and that should
    # do its job after a PR hits master
    continue-on-error: true

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.60.0
          override: true
      - uses: swatinem/rust-cache@v1
      - run: cargo install --locked cargo-outdated
      - name: cargo-outdated
        run: cargo outdated --root-deps-only --color always


  # TIER 1
  cross-aarch64:
    name: cross-aarch64
    needs: check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.60.0
          target: aarch64-unknown-linux-gnu
          override: true
      - uses: swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target=aarch64-unknown-linux-gnu


  # TIER 1
  cross-aarch64-test:
    name: cross-aarch64-test
    needs: cross-aarch64
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.60.0
          target: aarch64-unknown-linux-gnu
          override: true
      - uses: swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: test
          args: --target=aarch64-unknown-linux-gnu


  # TIER 2 w/ host tools
  cross-armv7-32:
    name: cross-armv7-32
    needs: check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.60.0
          target: armv7-unknown-linux-gnueabihf
          override: true
      - uses: swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target=armv7-unknown-linux-gnueabihf


  # TIER 2 w/ host tools
  cross-armv7-32-test:
    name: cross-armv7-32-test
    needs: cross-armv7-32
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.60.0
          target: armv7-unknown-linux-gnueabihf
          override: true
      - uses: swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: test
          args: --target=armv7-unknown-linux-gnueabihf


  # TIER 2 w/ host tools
  cross-aarch64-musl:
    name: cross-aarch64-musl
    needs: check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.60.0
          target: aarch64-unknown-linux-musl
          override: true
      - uses: swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target=aarch64-unknown-linux-musl


  # TIER 2 w/ host tools
  cross-riscv:
    name: cross-riscv
    needs: check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.60.0
          target: riscv64gc-unknown-linux-gnu
          override: true
      - uses: swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target=riscv64gc-unknown-linux-gnu

  # TIER 2 w/ host tools
  cross-x8664-freebsd:
    name: cross-x8664-freebsd
    needs: check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.60.0
          target: x86_64-unknown-freebsd
          override: true
      - uses: swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target=x86_64-unknown-freebsd

